name: Publish Docker Container

on:
  push:
    # Tag the image with :latest if a commit is made to main
    branches: [ main, dev ]
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
  
  # Allows this workflow to run manually
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Test: docker build"
        run: docker build --build-arg NPM_TOKEN=${{secrets.NPM_TOKEN}} . --file Dockerfile
          
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    # Ensure our tests pass before we start the Release job
    needs: tests

    steps:
      - uses: actions/checkout@v2
      
      # Authenticate with GitHub Container Registry
      - name: docker login
        run: docker echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      # Build the docker image
      - name: docker build
        run: docker build --build-arg NPM_TOKEN=$NPM_TOKEN . --file Dockerfile --tag dockr_img
        
      # Docker push
      - name: docker login
        run: |
          IMAGE_URL=ghcr.io/${{ github.repository }}
          
          # Change all uppercase characters to lowercase
          IMAGE_URL=$(echo $IMAGE_URL | tr '[A-Z]' '[a-z]')
          
          # Get the branch name
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip the 'v' prefix from tag names
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')          
          
          # If the branch is 'main' change the tag to 'latest' per the docker convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          # Publish the image
          echo destination_url=$IMAGE_URL:$VERSION
          docker tag dockr_img $IMAGE_URL:$VERSION
          docker push $IMAGE_URL:$VERSION
